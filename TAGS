
lime_types.cc,50
bool isType(const std::string& str) {isType3,25

lime_types.h,475
enum LimeTypes {LimeTypes6,48
    Unknown,Unknown7,65
    Uint8,Uint89,79
    Uint16,Uint1610,90
    Uint32,Uint3211,102
    Uint64,Uint6412,114
    Int8,Int814,127
    Int16,Int1615,137
    Int32,Int3216,148
    Int64,Int6417,159
    Float,Float19,171
    Float32,Float3220,182
    String,String22,196
    Boolean,Boolean23,208
    Num_TypesNum_Types25,222
static std::map<std::string, LimeTypes> LimeTypeStringMap = {LimeTypeStringMap28,240

lime_utils.cc,168
void LimeAssert(bool expression, int line_number, LimeErrorLevel lvl, const std::string& msg) {LimeAssert3,25
bool isNumber(const std::string& word) {isNumber7,150

lime_utils.h,136
enum LimeErrorLevel{ LimeErrorLevel7,71
    LimeError,LimeError8,93
    LimeWarning,LimeWarning9,108
    LimeNoteLimeNote10,125

main.cc,110
const auto code = std::string{R"LEAF(code12,153
#define RUN_TESTSRUN_TESTS20,260
int main() {main22,279

lexer.cc,643
Token::Token()Token5,62
Token::Token(std::string word, LimeTokenTypes type, bool isWhiteSpace = false):Token10,87
Token::Token(const Token& token) {Token18,242
ostream& operator<<(ostream& os, const Token& token) {operator <<25,384
std::string Token::ToString() const {ToString31,497
const std::string LoadFileToString(const std::string& path){LoadFileToString41,761
vector<string> SplitTokensToWordsAndSymbols(const string& code){SplitTokensToWordsAndSymbols55,1000
vector<Token> WordsToTokens(const vector<string>& words) {WordsToTokens147,3169
vector<Token> TokenizeString(const std::string& code) {TokenizeString188,4713

lime_tests.h,215
std::tuple<bool, std::string> isNumberTests() {isNumberTests9,122
bool runTest(std::function<std::tuple<bool, std::string>()> fn, const std::string& name){runTest21,553
bool limeRunTests() {limeRunTests27,825

ast.cc,872
Node::Node(Token& token) {Node3,18
Node::Node(){}Node13,248
std::string Node::ToString(std::string indent = "") const {ToString15,264
ostream& operator<<(ostream& os, const Node& node) {operator <<46,1313
Ast::Ast() {Ast52,1438
std::vector<Token> GetExpressionTokens(std::vector<Token>::iterator& it, std::vector<Token>::iterator end) {GetExpressionTokens56,1493
Node* HandleFunctionCall(std::vector<Token>::iterator begin) {HandleFunctionCall109,3002
Node* TokenToNode(Token& token) {TokenToNode113,3088
void SortExpression(Node* node){SortExpression132,3547
Node* PackExpression(std::vector<Token>::iterator it, std::vector<Token>::iterator end) {PackExpression192,5343
void code_block_to_ast(Ast* ast, std::vector<Token>& tokens) {code_block_to_ast249,7028
Ast create_ast_from_tokens(std::vector<Token>& tokens) {create_ast_from_tokens359,10138

lexer.h,1078
enum LimeTokenTypes {LimeTokenTypes13,173
	LIME_IDENTIFIER,LIME_IDENTIFIER14,195
	LIME_NUMBER,LIME_NUMBER15,213
	LIME_NEWLINE,LIME_NEWLINE16,227
	LIME_TABULAR,LIME_TABULAR17,242
	LIME_WHITESPACE,LIME_WHITESPACE18,257
	LIME_OPERATOR,LIME_OPERATOR19,275
    LIME_PROC,LIME_PROC21,292
    LIME_OPEN_PAREN,LIME_OPEN_PAREN23,308
    LIME_CLOSE_PAREN,LIME_CLOSE_PAREN24,329
    LIME_MUTABLE,LIME_MUTABLE26,352
    LIME_TYPE_IDENTIFIER,LIME_TYPE_IDENTIFIER28,371
	LIME_NUM_TOKENSLIME_NUM_TOKENS30,398
enum LimeOperators {LimeOperators33,419
	LIME_ASSIGNMENT_OPERATOR,LIME_ASSIGNMENT_OPERATOR34,440
	LIME_PLUS_OPERATOR,LIME_PLUS_OPERATOR35,467
	LIME_MINUS_OPERATOR,LIME_MINUS_OPERATOR36,488
	LIME_MULTIPLICATION_OPERATOR,LIME_MULTIPLICATION_OPERATOR37,510
	LIME_DIVISION_OPERATOR,LIME_DIVISION_OPERATOR38,541
	LIME_NONE_OPERATORLIME_NONE_OPERATOR39,566
static const std::map<LimeTokenTypes, const std::string> LimeTokenTypesNames = {LimeTokenTypesNames42,590
struct Token {Token62,1147
typedef std::vector<Token> TokenList;TokenList81,1577

Makefile,264
CC=g++CC1,0
CCFLAGS=-std=c++17 -Wall -g -Wno-unused-function -Wno-unused-variable -Wno-unused-parameterCCFLAGS2,7
LDFLAGS=-lrt -lpthread -lmLDFLAGS3,99
SOURCES=$(wildcard *.cc)SOURCES4,126
OBJECTS=$(SOURCES:.cc=.o)OBJECTS5,151
	TARGET=a.outTARGET6,177

ast.h,1382
enum NodeType {NodeType9,114
    LIME_NODE_NONE,LIME_NODE_NONE10,130
    LIME_NODE_VARIABlE_ASSIGNMENT,LIME_NODE_VARIABlE_ASSIGNMENT11,150
    LIME_NODE_EXPRESSION,LIME_NODE_EXPRESSION12,185
    LIME_NODE_NUMBER_LITERAL,LIME_NODE_NUMBER_LITERAL13,211
    LIME_NODE_OPERATOR,LIME_NODE_OPERATOR14,241
    LIME_NODE_CODE_BLOCK,LIME_NODE_CODE_BLOCK15,265
static const std::map<NodeType, const std::string> LimeNodeTypesNames = {LimeNodeTypesNames18,295
enum OrderOfPrecedence {OrderOfPrecedence27,689
    Comma,Comma28,714
    PlusEqual,PlusEqual29,725
    MinusEqual,MinusEqual30,740
    TimesEqual,TimesEqual31,756
    DivideEqual,DivideEqual32,772
    ModEqual,ModEqual33,789
    Equals,Equals34,803
    GreaterThan,GreaterThan35,815
    GreaterThanOrEqual,GreaterThanOrEqual36,832
    LessThan,LessThan37,856
    LessThanOrEqual,LessThanOrEqual38,870
    NotEqual,NotEqual39,891
    Sub,Sub40,905
    Add,Add41,914
    Mod,Mod42,923
    Div,Div43,932
    Mult,Mult44,941
    UnaryMinus,UnaryMinus45,951
    UnaryPlusUnaryPlus46,967
static const std::map<std::string, OrderOfPrecedence> OrderOfPrecedenceTable = {OrderOfPrecedenceTable49,985
struct Node {Node69,1527
    Token token;token73,1578
    std::vector<Node*> children;children79,1682
struct Ast : public Node {Ast97,2055
struct CodeLens {CodeLens107,2278
