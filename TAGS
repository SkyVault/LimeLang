
lime_types.cc,50
bool isType(const std::string& str) {isType3,25

lime_types.h,497
enum LimeTypes {LimeTypes6,48
    Unknown,Unknown7,65
    None,None9,79
    Uint8,Uint811,90
    Uint16,Uint1612,101
    Uint32,Uint3213,113
    Uint64,Uint6414,125
    Int8,Int816,138
    Int16,Int1617,148
    Int32,Int3218,159
    Int64,Int6419,170
    Float,Float21,182
    Float32,Float3222,193
    String,String24,207
    Boolean,Boolean25,219
    Num_TypesNum_Types27,233
static std::map<std::string, LimeTypes> LimeTypeStringMap = {LimeTypeStringMap30,251

lime_utils.cc,168
void LimeAssert(bool expression, int line_number, LimeErrorLevel lvl, const std::string& msg) {LimeAssert3,25
bool isNumber(const std::string& word) {isNumber7,150

lime_utils.h,136
enum LimeErrorLevel{ LimeErrorLevel7,71
    LimeError,LimeError8,93
    LimeWarning,LimeWarning9,108
    LimeNoteLimeNote10,125

main.cc,116
const auto code = std::string{R"LEAF(code15,214
#define LOG_TO_FILESLOG_TO_FILES22,305
int main() {main24,327

lime_c_gen.cc,288
std::string LimeCGen::compile_expression(Node* node) {compile_expression5,67
std::string LimeCGen::compile_code_block(Node* node, const std::string indent) {compile_code_block59,1461
void LimeCGen::compile_ast_to_c(Node* node, const std::string& out_file) {compile_ast_to_c194,6423

out.c,560
#define none none3,42
typedef unsigned char   u8;u84,60
typedef unsigned short  u16;u165,88
typedef unsigned int    u32;u326,117
typedef unsigned long   u64;u647,146
typedef int             i8;i89,176
typedef int             i16;i1610,204
typedef int             i32;i3211,233
typedef int             i64;i6412,262
typedef float           f32;f3214,292
typedef double          f64;f6415,321
typedef unsigned int    uint;uint17,381
typedef float           real;real18,411
int main(int num_arg_pkDHTx, char** args_pkDHTx) {main20,442

lexer.cc,644
Token::Token()Token6,81
Token::Token(std::string word, LimeTokenTypes type, bool isWhiteSpace = false):Token11,106
Token::Token(const Token& token) {Token19,261
ostream& operator<<(ostream& os, const Token& token) {operator <<27,440
std::string Token::ToString() const {ToString33,553
const std::string LoadFileToString(const std::string& path){LoadFileToString43,817
vector<string> SplitTokensToWordsAndSymbols(const string& code){SplitTokensToWordsAndSymbols57,1056
vector<Token> WordsToTokens(const vector<string>& words) {WordsToTokens177,3903
vector<Token> TokenizeString(const std::string& code) {TokenizeString269,7073

lime_tests.h,215
std::tuple<bool, std::string> isNumberTests() {isNumberTests9,122
bool runTest(std::function<std::tuple<bool, std::string>()> fn, const std::string& name){runTest21,553
bool limeRunTests() {limeRunTests27,825

ast.cc,1720
Node::Node(Token& token) {Node7,154
Node::Node(){}Node17,384
Node* Node::add(Node* node) {add19,400
std::string Node::ToString(std::string indent = "") const {ToString24,480
ostream& operator<<(ostream& os, const Node& node) {operator <<62,1681
std::vector<Token> GetExpressionTokens(std::vector<Token>::iterator& it, std::vector<Token>::iterator end) {GetExpressionTokens68,1806
Node* HandleFunctionCall(std::vector<Token>::iterator begin) {HandleFunctionCall123,3492
Node* TokenToNode(Token& token) {TokenToNode127,3578
void SortExpression(Node* node){SortExpression155,4337
Node* PackExpression(std::vector<Token>::iterator it, std::vector<Token>::iterator end) {PackExpression215,6171
void get_all_within_tokens(std::vector<Token>::iterator& it, std::vector<Token>::iterator end, std::string tstart = "{", std::string tend = "}") {get_all_within_tokens288,8363
Node* parameters_to_node(std::vector<Token>& tokens) {parameters_to_node302,8749
Node* handle_function_call(std::vector<Token>::iterator& it, std::vector<Token>::iterator last) {handle_function_call358,10540
void code_block_to_ast(Node* ast, std::vector<Token>& tokens) {code_block_to_ast404,11990
CodeLens* GetCodeLens() { return Lens; }GetCodeLens754,23323
bool CodeLens::varExists(const std::string& name) {varExists756,23365
void CodeLens::addVar(Node* node) {addVar764,23597
bool CodeLens::procExists(const std::string& name) {procExists770,23818
void CodeLens::addProc(Node* node) {addProc776,23963
void CodeLens::push() {push782,24153
void CodeLens::pop() {pop786,24242
bool AstPass(Node* ast) {AstPass791,24344
Node* create_ast_from_tokens(std::vector<Token>& tokens) {create_ast_from_tokens925,29044

lexer.h,1874
enum LimeTokenTypes {LimeTokenTypes13,173
	LIME_IDENTIFIER,LIME_IDENTIFIER14,195
	LIME_NUMBER,LIME_NUMBER15,213
	LIME_NEWLINE,LIME_NEWLINE16,227
	LIME_TABULAR,LIME_TABULAR17,242
	LIME_WHITESPACE,LIME_WHITESPACE18,257
	LIME_OPERATOR,LIME_OPERATOR19,275
    LIME_COMMA,LIME_COMMA20,291
    LIME_STRING,LIME_STRING22,308
    LIME_CHARACTER,LIME_CHARACTER23,325
    LIME_PROC,LIME_PROC25,346
    LIME_RETURN,LIME_RETURN26,361
    LIME_OPEN_PAREN,LIME_OPEN_PAREN28,379
    LIME_CLOSE_PAREN,LIME_CLOSE_PAREN29,400
    LIME_OPEN_CURLY_BRACKET,LIME_OPEN_CURLY_BRACKET31,423
    LIME_CLOSE_CURLY_BRACKET,LIME_CLOSE_CURLY_BRACKET32,452
    LIME_MUTABLE,LIME_MUTABLE34,483
    LIME_TYPE_IDENTIFIER,LIME_TYPE_IDENTIFIER36,502
    LIME_WHILE, LIME_WHILE38,529
    LIME_FOR,LIME_FOR39,546
    LIME_IF,LIME_IF41,561
    LIME_ELSE,LIME_ELSE42,574
    LIME_ELIF,LIME_ELIF43,589
    LIME_METATAG, // $LIME_METATAG45,605
	LIME_NUM_TOKENSLIME_NUM_TOKENS47,629
enum LimeOperators {LimeOperators50,650
	LIME_ASSIGNMENT_OPERATOR,LIME_ASSIGNMENT_OPERATOR51,671
	LIME_PLUS_OPERATOR,LIME_PLUS_OPERATOR52,698
	LIME_MINUS_OPERATOR,LIME_MINUS_OPERATOR53,719
	LIME_MULTIPLICATION_OPERATOR,LIME_MULTIPLICATION_OPERATOR54,741
	LIME_DIVISION_OPERATOR,LIME_DIVISION_OPERATOR55,772
    LIME_COMPAIRISON_OPERATOR,LIME_COMPAIRISON_OPERATOR57,798
    LIME_GREATER_EQUAL_OPERATOR,LIME_GREATER_EQUAL_OPERATOR58,829
    LIME_LESS_EQUAL_OPERATOR,LIME_LESS_EQUAL_OPERATOR59,862
    LIME_GREATER,LIME_GREATER60,892
    LIME_LESS,LIME_LESS61,910
    LIME_NOT_EQUAL_OPERATOR,LIME_NOT_EQUAL_OPERATOR62,925
	LIME_NONE_OPERATORLIME_NONE_OPERATOR64,955
static const std::map<LimeTokenTypes, const std::string> LimeTokenTypesNames = {LimeTokenTypesNames67,979
struct Token {Token100,1848
typedef std::vector<Token> TokenList;TokenList120,2302

lime_c_gen.h,435
const std::string TypeDefs = R"TYPEDEFS(TypeDefs10,108
struct LimeCGen {LimeCGen29,561
    std::stringstream code, gfdef, gfprot, gvd, header;code36,785
    std::stringstream code, gfdef, gfprot, gvd, header;gfdef36,785
    std::stringstream code, gfdef, gfprot, gvd, header;gfprot36,785
    std::stringstream code, gfdef, gfprot, gvd, header;gvd36,785
    std::stringstream code, gfdef, gfprot, gvd, header;header36,785

Makefile,269
CC=g++CC1,0
CCFLAGS=-std=c++17 -Wall -g -O0 -Wno-unused-function -Wno-unused-variable -Wno-unused-parameterCCFLAGS2,7
LDFLAGS=-lrt -lpthread -lmLDFLAGS3,103
SOURCES=$(wildcard *.cc)SOURCES4,130
OBJECTS=$(SOURCES:.cc=.o)OBJECTS5,155
	TARGET=a.outTARGET6,181

lime.h,959
#define MAJOR_VERSION MAJOR_VERSION2,13
#define MINOR_VERSION MINOR_VERSION3,39
#define REVISION_VERISON REVISION_VERISON4,65
#define LIME_VERSION LIME_VERSION6,95
#define COLORED_OUTPUTCOLORED_OUTPUT8,171
enum class ansi_color_code: int{ansi_color_code17,307
    black = 30,black18,340
    red=31,red19,356
    green=32,green20,368
    yellow=33,yellow21,382
    blue=34,blue22,397
    magenta=35,magenta23,410
    cyan=36,cyan24,426
    white=37,white25,439
    bright_black = 90,bright_black26,453
    bright_red=91,bright_red27,476
    bright_green=92,bright_green28,495
    bright_yellow=93,bright_yellow29,516
    bright_blue=94,bright_blue30,538
    bright_magenta=95,bright_magenta31,558
    bright_cyan=96,bright_cyan32,581
    bright_white=97,bright_white33,601
static void print_as_color(printable const& value, ansi_color_code color){print_as_color37,655
const std::string char_set = char_set43,883

ast.h,2475
enum NodeType {NodeType12,149
    LIME_NODE_NONE,LIME_NODE_NONE13,165
    LIME_NODE_VARIABLE_DECLARATION,LIME_NODE_VARIABLE_DECLARATION14,185
    LIME_NODE_VARIABlE_ASSIGNMENT,LIME_NODE_VARIABlE_ASSIGNMENT15,221
    LIME_NODE_EXPRESSION,LIME_NODE_EXPRESSION16,256
    LIME_NODE_NUMBER_LITERAL,LIME_NODE_NUMBER_LITERAL17,282
    LIME_NODE_STRING_LITERAL,LIME_NODE_STRING_LITERAL18,312
    LIME_NODE_CHARACTER_LITERAL,LIME_NODE_CHARACTER_LITERAL19,342
    LIME_NODE_OPERATOR,LIME_NODE_OPERATOR20,375
    LIME_NODE_CODE_BLOCK,LIME_NODE_CODE_BLOCK21,399
    LIME_NODE_IDENTIFIER,LIME_NODE_IDENTIFIER22,425
    LIME_NODE_PROC_CALL,LIME_NODE_PROC_CALL23,451
    LIME_NODE_PROC_DEFINITION,LIME_NODE_PROC_DEFINITION24,476
    LIME_NODE_PROC_DECLARATION,LIME_NODE_PROC_DECLARATION25,507
    LIME_NODE_ARGUMENT_LIST,LIME_NODE_ARGUMENT_LIST26,539
    LIME_NODE_PARAMETER_LIST,LIME_NODE_PARAMETER_LIST27,568
    LIME_NODE_WHILE_LOOP,LIME_NODE_WHILE_LOOP28,598
    LIME_NODE_IF_STATEMENT,LIME_NODE_IF_STATEMENT30,625
    LIME_NODE_ELSEIF_STATEMENT,LIME_NODE_ELSEIF_STATEMENT31,653
    LIME_NODE_ELSE_STATEMENT,LIME_NODE_ELSE_STATEMENT32,685
    LIME_NODE_RETURN,LIME_NODE_RETURN34,716
    LIME_NODE_EMIT,LIME_NODE_EMIT35,738
static const std::map<NodeType, const std::string> LimeNodeTypesNames = {LimeNodeTypesNames38,762
enum OrderOfPrecedence {OrderOfPrecedence62,1818
    Comma,Comma63,1843
    PlusEqual,PlusEqual64,1854
    MinusEqual,MinusEqual65,1869
    TimesEqual,TimesEqual66,1885
    DivideEqual,DivideEqual67,1901
    ModEqual,ModEqual68,1918
    Equals,Equals69,1932
    GreaterThan,GreaterThan70,1944
    GreaterThanOrEqual,GreaterThanOrEqual71,1961
    LessThan,LessThan72,1985
    LessThanOrEqual,LessThanOrEqual73,1999
    NotEqual,NotEqual74,2020
    Sub,Sub75,2034
    Add,Add76,2043
    Mod,Mod77,2052
    Div,Div78,2061
    Mult,Mult79,2070
    UnaryMinus,UnaryMinus80,2080
    UnaryPlusUnaryPlus81,2096
static const std::map<std::string, OrderOfPrecedence> OrderOfPrecedenceTable = {OrderOfPrecedenceTable84,2114
struct Node {Node104,2650
    Token token;token108,2701
    std::vector<Node*> children;children114,2807
typedef Node Ast;Ast137,3390
struct CodeLens {CodeLens139,3409
    std::vector<std::map<std::string, Node*>> variable_scope;variable_scope140,3427
    std::map<std::string, Node*> functions;functions141,3489
static CodeLens* Lens;Lens153,3723

lime.cc,114
void Error(std::string message, int line_number = 1) {Error4,38
std::string gen_uuid(int num) {gen_uuid21,463
