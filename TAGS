
lime_types.cc,50
bool isType(const std::string& str) {isType3,25

lime_types.h,497
enum LimeTypes {LimeTypes6,48
    Unknown,Unknown7,65
    None,None9,79
    Uint8,Uint811,90
    Uint16,Uint1612,101
    Uint32,Uint3213,113
    Uint64,Uint6414,125
    Int8,Int816,138
    Int16,Int1617,148
    Int32,Int3218,159
    Int64,Int6419,170
    Float,Float21,182
    Float32,Float3222,193
    String,String24,207
    Boolean,Boolean25,219
    Num_TypesNum_Types27,233
static std::map<std::string, LimeTypes> LimeTypeStringMap = {LimeTypeStringMap30,251

lime_utils.cc,168
void LimeAssert(bool expression, int line_number, LimeErrorLevel lvl, const std::string& msg) {LimeAssert3,25
bool isNumber(const std::string& word) {isNumber7,150

lime_utils.h,136
enum LimeErrorLevel{ LimeErrorLevel7,71
    LimeError,LimeError8,93
    LimeWarning,LimeWarning9,108
    LimeNoteLimeNote10,125

main.cc,151
const auto code = std::string{R"LEAF(code14,196
#define RUN_TESTSRUN_TESTS41,584
#define LOG_TO_FILESLOG_TO_FILES42,602
int main() {main44,624

lime_c_gen.cc,87
void compile_ast_to_c(Node* node, const std::string& out_file) {compile_ast_to_c3,25

lexer.cc,643
Token::Token()Token5,62
Token::Token(std::string word, LimeTokenTypes type, bool isWhiteSpace = false):Token10,87
Token::Token(const Token& token) {Token18,242
ostream& operator<<(ostream& os, const Token& token) {operator <<26,421
std::string Token::ToString() const {ToString32,534
const std::string LoadFileToString(const std::string& path){LoadFileToString42,798
vector<string> SplitTokensToWordsAndSymbols(const string& code){SplitTokensToWordsAndSymbols56,1037
vector<Token> WordsToTokens(const vector<string>& words) {WordsToTokens148,3206
vector<Token> TokenizeString(const std::string& code) {TokenizeString204,5101

lime_tests.h,215
std::tuple<bool, std::string> isNumberTests() {isNumberTests9,122
bool runTest(std::function<std::tuple<bool, std::string>()> fn, const std::string& name){runTest21,553
bool limeRunTests() {limeRunTests27,825

ast.cc,1027
Node::Node(Token& token) {Node3,18
Node::Node(){}Node13,248
std::string Node::ToString(std::string indent = "") const {ToString15,264
ostream& operator<<(ostream& os, const Node& node) {operator <<47,1229
std::vector<Token> GetExpressionTokens(std::vector<Token>::iterator& it, std::vector<Token>::iterator end) {GetExpressionTokens53,1354
Node* HandleFunctionCall(std::vector<Token>::iterator begin) {HandleFunctionCall106,2863
Node* TokenToNode(Token& token) {TokenToNode110,2949
void SortExpression(Node* node){SortExpression132,3506
Node* PackExpression(std::vector<Token>::iterator it, std::vector<Token>::iterator end) {PackExpression192,5302
void get_all_within_tokens(std::vector<Token>::iterator& it, std::vector<Token>::iterator end, std::string tstart = "{", std::string tend = "}") {get_all_within_tokens249,6987
void code_block_to_ast(Node* ast, std::vector<Token>& tokens) {code_block_to_ast263,7373
Node create_ast_from_tokens(std::vector<Token>& tokens) {create_ast_from_tokens457,13344

lexer.h,1234
enum LimeTokenTypes {LimeTokenTypes13,173
	LIME_IDENTIFIER,LIME_IDENTIFIER14,195
	LIME_NUMBER,LIME_NUMBER15,213
	LIME_NEWLINE,LIME_NEWLINE16,227
	LIME_TABULAR,LIME_TABULAR17,242
	LIME_WHITESPACE,LIME_WHITESPACE18,257
	LIME_OPERATOR,LIME_OPERATOR19,275
    LIME_CAMMA,LIME_CAMMA20,291
    LIME_PROC,LIME_PROC22,308
    LIME_OPEN_PAREN,LIME_OPEN_PAREN24,324
    LIME_CLOSE_PAREN,LIME_CLOSE_PAREN25,345
    LIME_OPEN_CURLY_BRACKET,LIME_OPEN_CURLY_BRACKET27,368
    LIME_CLOSE_CURLY_BRACKET,LIME_CLOSE_CURLY_BRACKET28,397
    LIME_MUTABLE,LIME_MUTABLE30,428
    LIME_TYPE_IDENTIFIER,LIME_TYPE_IDENTIFIER32,447
	LIME_NUM_TOKENSLIME_NUM_TOKENS34,474
enum LimeOperators {LimeOperators37,495
	LIME_ASSIGNMENT_OPERATOR,LIME_ASSIGNMENT_OPERATOR38,516
	LIME_PLUS_OPERATOR,LIME_PLUS_OPERATOR39,543
	LIME_MINUS_OPERATOR,LIME_MINUS_OPERATOR40,564
	LIME_MULTIPLICATION_OPERATOR,LIME_MULTIPLICATION_OPERATOR41,586
	LIME_DIVISION_OPERATOR,LIME_DIVISION_OPERATOR42,617
	LIME_NONE_OPERATORLIME_NONE_OPERATOR43,642
static const std::map<LimeTokenTypes, const std::string> LimeTokenTypesNames = {LimeTokenTypesNames46,666
struct Token {Token66,1223
typedef std::vector<Token> TokenList;TokenList86,1677

lime_c_gen.h,0

Makefile,264
CC=g++CC1,0
CCFLAGS=-std=c++17 -Wall -g -Wno-unused-function -Wno-unused-variable -Wno-unused-parameterCCFLAGS2,7
LDFLAGS=-lrt -lpthread -lmLDFLAGS3,99
SOURCES=$(wildcard *.cc)SOURCES4,126
OBJECTS=$(SOURCES:.cc=.o)OBJECTS5,151
	TARGET=a.outTARGET6,177

ast.h,1720
enum NodeType {NodeType11,128
    LIME_NODE_NONE,LIME_NODE_NONE12,144
    LIME_NODE_VARIABlE_ASSIGNMENT,LIME_NODE_VARIABlE_ASSIGNMENT13,164
    LIME_NODE_EXPRESSION,LIME_NODE_EXPRESSION14,199
    LIME_NODE_NUMBER_LITERAL,LIME_NODE_NUMBER_LITERAL15,225
    LIME_NODE_OPERATOR,LIME_NODE_OPERATOR16,255
    LIME_NODE_CODE_BLOCK,LIME_NODE_CODE_BLOCK17,279
    LIME_NODE_IDENTIFIER,LIME_NODE_IDENTIFIER18,305
    LIME_NODE_FUNCTION_CALL,LIME_NODE_FUNCTION_CALL19,331
    LIME_NODE_PROCEDURE_DEFINITION,LIME_NODE_PROCEDURE_DEFINITION20,360
    LIME_NODE_PROCEDURE_DECLARATION,LIME_NODE_PROCEDURE_DECLARATION21,396
    LIME_NODE_ARGUMENT_LIST,LIME_NODE_ARGUMENT_LIST22,433
static const std::map<NodeType, const std::string> LimeNodeTypesNames = {LimeNodeTypesNames25,466
enum OrderOfPrecedence {OrderOfPrecedence39,1059
    Comma,Comma40,1084
    PlusEqual,PlusEqual41,1095
    MinusEqual,MinusEqual42,1110
    TimesEqual,TimesEqual43,1126
    DivideEqual,DivideEqual44,1142
    ModEqual,ModEqual45,1159
    Equals,Equals46,1173
    GreaterThan,GreaterThan47,1185
    GreaterThanOrEqual,GreaterThanOrEqual48,1202
    LessThan,LessThan49,1226
    LessThanOrEqual,LessThanOrEqual50,1240
    NotEqual,NotEqual51,1261
    Sub,Sub52,1275
    Add,Add53,1284
    Mod,Mod54,1293
    Div,Div55,1302
    Mult,Mult56,1311
    UnaryMinus,UnaryMinus57,1321
    UnaryPlusUnaryPlus58,1337
static const std::map<std::string, OrderOfPrecedence> OrderOfPrecedenceTable = {OrderOfPrecedenceTable61,1355
struct Node {Node81,1897
    Token token;token85,1948
    std::vector<Node*> children;children91,2054
typedef Node Ast;Ast112,2576
struct CodeLens {CodeLens114,2595
