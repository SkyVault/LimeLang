Token {  word: \n  type: LIME_NEWLINE}
Token {  word: \n  type: LIME_NEWLINE}
Token {  word: \n  type: LIME_NEWLINE}
Token {  word: val  type: LIME_IDENTIFIER}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: int  type: LIME_TYPE_IDENTIFIER}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: =  type: LIME_OPERATOR}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: 0  type: LIME_NUMBER}
Token {  word: \n  type: LIME_NEWLINE}
Token {  word: if  type: }
Token {  word:    type: LIME_WHITESPACE}
Token {  word: val  type: LIME_IDENTIFIER}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: ==  type: LIME_OPERATOR}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: 0  type: LIME_NUMBER}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: {  type: }
Token {  word: \n  type: LIME_NEWLINE}
Token {  word:    type: LIME_WHITESPACE}
Token {  word:    type: LIME_WHITESPACE}
Token {  word:    type: LIME_WHITESPACE}
Token {  word:    type: LIME_WHITESPACE}
Token {  word: print  type: LIME_IDENTIFIER}
Token {  word: (  type: LIME_OPEN_PAREN}
Token {  word: "Yeah"  type: LIME_IDENTIFIER}
Token {  word: )  type: LIME_CLOSE_PAREN}
Token {  word: \n  type: LIME_NEWLINE}
Token {  word: }  type: }
Token {  word: \n  type: LIME_NEWLINE}
Token {  word: \n  type: LIME_NEWLINE}
